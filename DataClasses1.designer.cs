#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication4
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MyProducts")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertQuote(Quote instance);
    partial void UpdateQuote(Quote instance);
    partial void DeleteQuote(Quote instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MyProductsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Quote> Quotes
		{
			get
			{
				return this.GetTable<Quote>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quote")]
	public partial class Quote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _symbol;
		
		private string _name;
		
		private string _dayCode;
		
		private System.Nullable<System.DateTime> _serverTimestamp;
		
		private string _mode;
		
		private System.Nullable<double> _lastPrice;
		
		private System.Nullable<int> _tradeSize;
		
		private System.Nullable<double> _netChange;
		
		private System.Nullable<double> _percentChange;
		
		private string _tick;
		
		private System.Nullable<double> _previousLastPrice;
		
		private System.Nullable<System.DateTime> _previousTimestamp;
		
		private System.Nullable<double> _bid;
		
		private System.Nullable<int> _bidSize;
		
		private System.Nullable<double> _ask;
		
		private System.Nullable<int> _askSize;
		
		private string _unitCode;
		
		private System.Nullable<double> _open;
		
		private System.Nullable<double> _high;
		
		private System.Nullable<double> _low;
		
		private System.Nullable<double> _close;
		
		private System.Nullable<int> _numTrades;
		
		private System.Nullable<double> _dollarVolume;
		
		private string _flag;
		
		private System.Nullable<double> _previousClose;
		
		private System.Nullable<double> _settlement;
		
		private System.Nullable<double> _previousSettlement;
		
		private System.Nullable<int> _volume;
		
		private System.Nullable<int> _previousVolume;
		
		private System.Nullable<double> _openInterest;
		
		private System.Nullable<double> _fiftyTwoWkHigh;
		
		private System.Nullable<System.DateTime> _fiftyTwoWkHighDate;
		
		private System.Nullable<double> _fiftyTwoWkLow;
		
		private System.Nullable<System.DateTime> _fiftyTwoWkLowDate;
		
		private System.Nullable<int> _avgVolume;
		
		private System.Nullable<int> _sharesOutstanding;
		
		private System.Nullable<double> _dividendRateAnnual;
		
		private System.Nullable<double> _dividendYieldAnnual;
		
		private System.Nullable<System.DateTime> _exDividendDate;
		
		private System.Nullable<double> _impliedVolatility;
		
		private System.Nullable<double> _twentyDayAvgVol;
		
		private string _month;
		
		private string _year;
		
		private System.Nullable<System.DateTime> _expirationDate;
		
		private string _lastTradingDay;
		
		private System.Nullable<double> _twelveMnthPct;
		
		private System.Nullable<System.DateTime> _twelveMnthPctDate;
		
		private System.Nullable<double> _preMarketPrice;
		
		private System.Nullable<double> _preMarketNetChange;
		
		private System.Nullable<double> _preMarketPercentChange;
		
		private System.Nullable<System.DateTime> _preMarketTimestamp;
		
		private System.Nullable<double> _afterHoursPrice;
		
		private System.Nullable<double> _afterHoursNetChange;
		
		private System.Nullable<double> _afterHoursPercentChange;
		
		private System.Nullable<System.DateTime> _afterHoursTimestamp;
		
		private System.Nullable<int> _averageWeeklyVolume;
		
		private System.Nullable<int> _averageMonthlyVolume;
		
		private System.Nullable<int> _averageQuarterlyVolume;
		
		private string _exchangeMargin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnsymbolChanging(string value);
    partial void OnsymbolChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndayCodeChanging(string value);
    partial void OndayCodeChanged();
    partial void OnserverTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnserverTimestampChanged();
    partial void OnmodeChanging(string value);
    partial void OnmodeChanged();
    partial void OnlastPriceChanging(System.Nullable<double> value);
    partial void OnlastPriceChanged();
    partial void OntradeSizeChanging(System.Nullable<int> value);
    partial void OntradeSizeChanged();
    partial void OnnetChangeChanging(System.Nullable<double> value);
    partial void OnnetChangeChanged();
    partial void OnpercentChangeChanging(System.Nullable<double> value);
    partial void OnpercentChangeChanged();
    partial void OntickChanging(string value);
    partial void OntickChanged();
    partial void OnpreviousLastPriceChanging(System.Nullable<double> value);
    partial void OnpreviousLastPriceChanged();
    partial void OnpreviousTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnpreviousTimestampChanged();
    partial void OnbidChanging(System.Nullable<double> value);
    partial void OnbidChanged();
    partial void OnbidSizeChanging(System.Nullable<int> value);
    partial void OnbidSizeChanged();
    partial void OnaskChanging(System.Nullable<double> value);
    partial void OnaskChanged();
    partial void OnaskSizeChanging(System.Nullable<int> value);
    partial void OnaskSizeChanged();
    partial void OnunitCodeChanging(string value);
    partial void OnunitCodeChanged();
    partial void OnopenChanging(System.Nullable<double> value);
    partial void OnopenChanged();
    partial void OnhighChanging(System.Nullable<double> value);
    partial void OnhighChanged();
    partial void OnlowChanging(System.Nullable<double> value);
    partial void OnlowChanged();
    partial void OncloseChanging(System.Nullable<double> value);
    partial void OncloseChanged();
    partial void OnnumTradesChanging(System.Nullable<int> value);
    partial void OnnumTradesChanged();
    partial void OndollarVolumeChanging(System.Nullable<double> value);
    partial void OndollarVolumeChanged();
    partial void OnflagChanging(string value);
    partial void OnflagChanged();
    partial void OnpreviousCloseChanging(System.Nullable<double> value);
    partial void OnpreviousCloseChanged();
    partial void OnsettlementChanging(System.Nullable<double> value);
    partial void OnsettlementChanged();
    partial void OnpreviousSettlementChanging(System.Nullable<double> value);
    partial void OnpreviousSettlementChanged();
    partial void OnvolumeChanging(System.Nullable<int> value);
    partial void OnvolumeChanged();
    partial void OnpreviousVolumeChanging(System.Nullable<int> value);
    partial void OnpreviousVolumeChanged();
    partial void OnopenInterestChanging(System.Nullable<double> value);
    partial void OnopenInterestChanged();
    partial void OnfiftyTwoWkHighChanging(System.Nullable<double> value);
    partial void OnfiftyTwoWkHighChanged();
    partial void OnfiftyTwoWkHighDateChanging(System.Nullable<System.DateTime> value);
    partial void OnfiftyTwoWkHighDateChanged();
    partial void OnfiftyTwoWkLowChanging(System.Nullable<double> value);
    partial void OnfiftyTwoWkLowChanged();
    partial void OnfiftyTwoWkLowDateChanging(System.Nullable<System.DateTime> value);
    partial void OnfiftyTwoWkLowDateChanged();
    partial void OnavgVolumeChanging(System.Nullable<int> value);
    partial void OnavgVolumeChanged();
    partial void OnsharesOutstandingChanging(System.Nullable<int> value);
    partial void OnsharesOutstandingChanged();
    partial void OndividendRateAnnualChanging(System.Nullable<double> value);
    partial void OndividendRateAnnualChanged();
    partial void OndividendYieldAnnualChanging(System.Nullable<double> value);
    partial void OndividendYieldAnnualChanged();
    partial void OnexDividendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexDividendDateChanged();
    partial void OnimpliedVolatilityChanging(System.Nullable<double> value);
    partial void OnimpliedVolatilityChanged();
    partial void OntwentyDayAvgVolChanging(System.Nullable<double> value);
    partial void OntwentyDayAvgVolChanged();
    partial void OnmonthChanging(string value);
    partial void OnmonthChanged();
    partial void OnyearChanging(string value);
    partial void OnyearChanged();
    partial void OnexpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpirationDateChanged();
    partial void OnlastTradingDayChanging(string value);
    partial void OnlastTradingDayChanged();
    partial void OntwelveMnthPctChanging(System.Nullable<double> value);
    partial void OntwelveMnthPctChanged();
    partial void OntwelveMnthPctDateChanging(System.Nullable<System.DateTime> value);
    partial void OntwelveMnthPctDateChanged();
    partial void OnpreMarketPriceChanging(System.Nullable<double> value);
    partial void OnpreMarketPriceChanged();
    partial void OnpreMarketNetChangeChanging(System.Nullable<double> value);
    partial void OnpreMarketNetChangeChanged();
    partial void OnpreMarketPercentChangeChanging(System.Nullable<double> value);
    partial void OnpreMarketPercentChangeChanged();
    partial void OnpreMarketTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnpreMarketTimestampChanged();
    partial void OnafterHoursPriceChanging(System.Nullable<double> value);
    partial void OnafterHoursPriceChanged();
    partial void OnafterHoursNetChangeChanging(System.Nullable<double> value);
    partial void OnafterHoursNetChangeChanged();
    partial void OnafterHoursPercentChangeChanging(System.Nullable<double> value);
    partial void OnafterHoursPercentChangeChanged();
    partial void OnafterHoursTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnafterHoursTimestampChanged();
    partial void OnaverageWeeklyVolumeChanging(System.Nullable<int> value);
    partial void OnaverageWeeklyVolumeChanged();
    partial void OnaverageMonthlyVolumeChanging(System.Nullable<int> value);
    partial void OnaverageMonthlyVolumeChanged();
    partial void OnaverageQuarterlyVolumeChanging(System.Nullable<int> value);
    partial void OnaverageQuarterlyVolumeChanged();
    partial void OnexchangeMarginChanging(string value);
    partial void OnexchangeMarginChanged();
    #endregion
		
		public Quote()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_symbol", DbType="NChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string symbol
		{
			get
			{
				return this._symbol;
			}
			set
			{
				if ((this._symbol != value))
				{
					this.OnsymbolChanging(value);
					this.SendPropertyChanging();
					this._symbol = value;
					this.SendPropertyChanged("symbol");
					this.OnsymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(20)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dayCode", DbType="NChar(20)")]
		public string dayCode
		{
			get
			{
				return this._dayCode;
			}
			set
			{
				if ((this._dayCode != value))
				{
					this.OndayCodeChanging(value);
					this.SendPropertyChanging();
					this._dayCode = value;
					this.SendPropertyChanged("dayCode");
					this.OndayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serverTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> serverTimestamp
		{
			get
			{
				return this._serverTimestamp;
			}
			set
			{
				if ((this._serverTimestamp != value))
				{
					this.OnserverTimestampChanging(value);
					this.SendPropertyChanging();
					this._serverTimestamp = value;
					this.SendPropertyChanged("serverTimestamp");
					this.OnserverTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mode", DbType="NChar(20)")]
		public string mode
		{
			get
			{
				return this._mode;
			}
			set
			{
				if ((this._mode != value))
				{
					this.OnmodeChanging(value);
					this.SendPropertyChanging();
					this._mode = value;
					this.SendPropertyChanged("mode");
					this.OnmodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastPrice", DbType="Float")]
		public System.Nullable<double> lastPrice
		{
			get
			{
				return this._lastPrice;
			}
			set
			{
				if ((this._lastPrice != value))
				{
					this.OnlastPriceChanging(value);
					this.SendPropertyChanging();
					this._lastPrice = value;
					this.SendPropertyChanged("lastPrice");
					this.OnlastPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tradeSize", DbType="Int")]
		public System.Nullable<int> tradeSize
		{
			get
			{
				return this._tradeSize;
			}
			set
			{
				if ((this._tradeSize != value))
				{
					this.OntradeSizeChanging(value);
					this.SendPropertyChanging();
					this._tradeSize = value;
					this.SendPropertyChanged("tradeSize");
					this.OntradeSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netChange", DbType="Float")]
		public System.Nullable<double> netChange
		{
			get
			{
				return this._netChange;
			}
			set
			{
				if ((this._netChange != value))
				{
					this.OnnetChangeChanging(value);
					this.SendPropertyChanging();
					this._netChange = value;
					this.SendPropertyChanged("netChange");
					this.OnnetChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_percentChange", DbType="Float")]
		public System.Nullable<double> percentChange
		{
			get
			{
				return this._percentChange;
			}
			set
			{
				if ((this._percentChange != value))
				{
					this.OnpercentChangeChanging(value);
					this.SendPropertyChanging();
					this._percentChange = value;
					this.SendPropertyChanged("percentChange");
					this.OnpercentChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tick", DbType="NChar(20)")]
		public string tick
		{
			get
			{
				return this._tick;
			}
			set
			{
				if ((this._tick != value))
				{
					this.OntickChanging(value);
					this.SendPropertyChanging();
					this._tick = value;
					this.SendPropertyChanged("tick");
					this.OntickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_previousLastPrice", DbType="Float")]
		public System.Nullable<double> previousLastPrice
		{
			get
			{
				return this._previousLastPrice;
			}
			set
			{
				if ((this._previousLastPrice != value))
				{
					this.OnpreviousLastPriceChanging(value);
					this.SendPropertyChanging();
					this._previousLastPrice = value;
					this.SendPropertyChanged("previousLastPrice");
					this.OnpreviousLastPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_previousTimestamp", DbType="Date")]
		public System.Nullable<System.DateTime> previousTimestamp
		{
			get
			{
				return this._previousTimestamp;
			}
			set
			{
				if ((this._previousTimestamp != value))
				{
					this.OnpreviousTimestampChanging(value);
					this.SendPropertyChanging();
					this._previousTimestamp = value;
					this.SendPropertyChanged("previousTimestamp");
					this.OnpreviousTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bid", DbType="Float")]
		public System.Nullable<double> bid
		{
			get
			{
				return this._bid;
			}
			set
			{
				if ((this._bid != value))
				{
					this.OnbidChanging(value);
					this.SendPropertyChanging();
					this._bid = value;
					this.SendPropertyChanged("bid");
					this.OnbidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bidSize", DbType="Int")]
		public System.Nullable<int> bidSize
		{
			get
			{
				return this._bidSize;
			}
			set
			{
				if ((this._bidSize != value))
				{
					this.OnbidSizeChanging(value);
					this.SendPropertyChanging();
					this._bidSize = value;
					this.SendPropertyChanged("bidSize");
					this.OnbidSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ask", DbType="Float")]
		public System.Nullable<double> ask
		{
			get
			{
				return this._ask;
			}
			set
			{
				if ((this._ask != value))
				{
					this.OnaskChanging(value);
					this.SendPropertyChanging();
					this._ask = value;
					this.SendPropertyChanged("ask");
					this.OnaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_askSize", DbType="Int")]
		public System.Nullable<int> askSize
		{
			get
			{
				return this._askSize;
			}
			set
			{
				if ((this._askSize != value))
				{
					this.OnaskSizeChanging(value);
					this.SendPropertyChanging();
					this._askSize = value;
					this.SendPropertyChanged("askSize");
					this.OnaskSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitCode", DbType="NChar(20)")]
		public string unitCode
		{
			get
			{
				return this._unitCode;
			}
			set
			{
				if ((this._unitCode != value))
				{
					this.OnunitCodeChanging(value);
					this.SendPropertyChanging();
					this._unitCode = value;
					this.SendPropertyChanged("unitCode");
					this.OnunitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[open]", Storage="_open", DbType="Float")]
		public System.Nullable<double> open
		{
			get
			{
				return this._open;
			}
			set
			{
				if ((this._open != value))
				{
					this.OnopenChanging(value);
					this.SendPropertyChanging();
					this._open = value;
					this.SendPropertyChanged("open");
					this.OnopenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_high", DbType="Float")]
		public System.Nullable<double> high
		{
			get
			{
				return this._high;
			}
			set
			{
				if ((this._high != value))
				{
					this.OnhighChanging(value);
					this.SendPropertyChanging();
					this._high = value;
					this.SendPropertyChanged("high");
					this.OnhighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_low", DbType="Float")]
		public System.Nullable<double> low
		{
			get
			{
				return this._low;
			}
			set
			{
				if ((this._low != value))
				{
					this.OnlowChanging(value);
					this.SendPropertyChanging();
					this._low = value;
					this.SendPropertyChanged("low");
					this.OnlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[close]", Storage="_close", DbType="Float")]
		public System.Nullable<double> close
		{
			get
			{
				return this._close;
			}
			set
			{
				if ((this._close != value))
				{
					this.OncloseChanging(value);
					this.SendPropertyChanging();
					this._close = value;
					this.SendPropertyChanged("close");
					this.OncloseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numTrades", DbType="Int")]
		public System.Nullable<int> numTrades
		{
			get
			{
				return this._numTrades;
			}
			set
			{
				if ((this._numTrades != value))
				{
					this.OnnumTradesChanging(value);
					this.SendPropertyChanging();
					this._numTrades = value;
					this.SendPropertyChanged("numTrades");
					this.OnnumTradesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dollarVolume", DbType="Float")]
		public System.Nullable<double> dollarVolume
		{
			get
			{
				return this._dollarVolume;
			}
			set
			{
				if ((this._dollarVolume != value))
				{
					this.OndollarVolumeChanging(value);
					this.SendPropertyChanging();
					this._dollarVolume = value;
					this.SendPropertyChanged("dollarVolume");
					this.OndollarVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flag", DbType="NChar(10)")]
		public string flag
		{
			get
			{
				return this._flag;
			}
			set
			{
				if ((this._flag != value))
				{
					this.OnflagChanging(value);
					this.SendPropertyChanging();
					this._flag = value;
					this.SendPropertyChanged("flag");
					this.OnflagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_previousClose", DbType="Float")]
		public System.Nullable<double> previousClose
		{
			get
			{
				return this._previousClose;
			}
			set
			{
				if ((this._previousClose != value))
				{
					this.OnpreviousCloseChanging(value);
					this.SendPropertyChanging();
					this._previousClose = value;
					this.SendPropertyChanged("previousClose");
					this.OnpreviousCloseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_settlement", DbType="Float")]
		public System.Nullable<double> settlement
		{
			get
			{
				return this._settlement;
			}
			set
			{
				if ((this._settlement != value))
				{
					this.OnsettlementChanging(value);
					this.SendPropertyChanging();
					this._settlement = value;
					this.SendPropertyChanged("settlement");
					this.OnsettlementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_previousSettlement", DbType="Float")]
		public System.Nullable<double> previousSettlement
		{
			get
			{
				return this._previousSettlement;
			}
			set
			{
				if ((this._previousSettlement != value))
				{
					this.OnpreviousSettlementChanging(value);
					this.SendPropertyChanging();
					this._previousSettlement = value;
					this.SendPropertyChanged("previousSettlement");
					this.OnpreviousSettlementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_volume", DbType="Int")]
		public System.Nullable<int> volume
		{
			get
			{
				return this._volume;
			}
			set
			{
				if ((this._volume != value))
				{
					this.OnvolumeChanging(value);
					this.SendPropertyChanging();
					this._volume = value;
					this.SendPropertyChanged("volume");
					this.OnvolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_previousVolume", DbType="Int")]
		public System.Nullable<int> previousVolume
		{
			get
			{
				return this._previousVolume;
			}
			set
			{
				if ((this._previousVolume != value))
				{
					this.OnpreviousVolumeChanging(value);
					this.SendPropertyChanging();
					this._previousVolume = value;
					this.SendPropertyChanged("previousVolume");
					this.OnpreviousVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openInterest", DbType="Float")]
		public System.Nullable<double> openInterest
		{
			get
			{
				return this._openInterest;
			}
			set
			{
				if ((this._openInterest != value))
				{
					this.OnopenInterestChanging(value);
					this.SendPropertyChanging();
					this._openInterest = value;
					this.SendPropertyChanged("openInterest");
					this.OnopenInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiftyTwoWkHigh", DbType="Float")]
		public System.Nullable<double> fiftyTwoWkHigh
		{
			get
			{
				return this._fiftyTwoWkHigh;
			}
			set
			{
				if ((this._fiftyTwoWkHigh != value))
				{
					this.OnfiftyTwoWkHighChanging(value);
					this.SendPropertyChanging();
					this._fiftyTwoWkHigh = value;
					this.SendPropertyChanged("fiftyTwoWkHigh");
					this.OnfiftyTwoWkHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiftyTwoWkHighDate", DbType="Date")]
		public System.Nullable<System.DateTime> fiftyTwoWkHighDate
		{
			get
			{
				return this._fiftyTwoWkHighDate;
			}
			set
			{
				if ((this._fiftyTwoWkHighDate != value))
				{
					this.OnfiftyTwoWkHighDateChanging(value);
					this.SendPropertyChanging();
					this._fiftyTwoWkHighDate = value;
					this.SendPropertyChanged("fiftyTwoWkHighDate");
					this.OnfiftyTwoWkHighDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiftyTwoWkLow", DbType="Float")]
		public System.Nullable<double> fiftyTwoWkLow
		{
			get
			{
				return this._fiftyTwoWkLow;
			}
			set
			{
				if ((this._fiftyTwoWkLow != value))
				{
					this.OnfiftyTwoWkLowChanging(value);
					this.SendPropertyChanging();
					this._fiftyTwoWkLow = value;
					this.SendPropertyChanged("fiftyTwoWkLow");
					this.OnfiftyTwoWkLowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiftyTwoWkLowDate", DbType="Date")]
		public System.Nullable<System.DateTime> fiftyTwoWkLowDate
		{
			get
			{
				return this._fiftyTwoWkLowDate;
			}
			set
			{
				if ((this._fiftyTwoWkLowDate != value))
				{
					this.OnfiftyTwoWkLowDateChanging(value);
					this.SendPropertyChanging();
					this._fiftyTwoWkLowDate = value;
					this.SendPropertyChanged("fiftyTwoWkLowDate");
					this.OnfiftyTwoWkLowDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avgVolume", DbType="Int")]
		public System.Nullable<int> avgVolume
		{
			get
			{
				return this._avgVolume;
			}
			set
			{
				if ((this._avgVolume != value))
				{
					this.OnavgVolumeChanging(value);
					this.SendPropertyChanging();
					this._avgVolume = value;
					this.SendPropertyChanged("avgVolume");
					this.OnavgVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sharesOutstanding", DbType="Int")]
		public System.Nullable<int> sharesOutstanding
		{
			get
			{
				return this._sharesOutstanding;
			}
			set
			{
				if ((this._sharesOutstanding != value))
				{
					this.OnsharesOutstandingChanging(value);
					this.SendPropertyChanging();
					this._sharesOutstanding = value;
					this.SendPropertyChanged("sharesOutstanding");
					this.OnsharesOutstandingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dividendRateAnnual", DbType="Float")]
		public System.Nullable<double> dividendRateAnnual
		{
			get
			{
				return this._dividendRateAnnual;
			}
			set
			{
				if ((this._dividendRateAnnual != value))
				{
					this.OndividendRateAnnualChanging(value);
					this.SendPropertyChanging();
					this._dividendRateAnnual = value;
					this.SendPropertyChanged("dividendRateAnnual");
					this.OndividendRateAnnualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dividendYieldAnnual", DbType="Float")]
		public System.Nullable<double> dividendYieldAnnual
		{
			get
			{
				return this._dividendYieldAnnual;
			}
			set
			{
				if ((this._dividendYieldAnnual != value))
				{
					this.OndividendYieldAnnualChanging(value);
					this.SendPropertyChanging();
					this._dividendYieldAnnual = value;
					this.SendPropertyChanged("dividendYieldAnnual");
					this.OndividendYieldAnnualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exDividendDate", DbType="Date")]
		public System.Nullable<System.DateTime> exDividendDate
		{
			get
			{
				return this._exDividendDate;
			}
			set
			{
				if ((this._exDividendDate != value))
				{
					this.OnexDividendDateChanging(value);
					this.SendPropertyChanging();
					this._exDividendDate = value;
					this.SendPropertyChanged("exDividendDate");
					this.OnexDividendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_impliedVolatility", DbType="Float")]
		public System.Nullable<double> impliedVolatility
		{
			get
			{
				return this._impliedVolatility;
			}
			set
			{
				if ((this._impliedVolatility != value))
				{
					this.OnimpliedVolatilityChanging(value);
					this.SendPropertyChanging();
					this._impliedVolatility = value;
					this.SendPropertyChanged("impliedVolatility");
					this.OnimpliedVolatilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_twentyDayAvgVol", DbType="Float")]
		public System.Nullable<double> twentyDayAvgVol
		{
			get
			{
				return this._twentyDayAvgVol;
			}
			set
			{
				if ((this._twentyDayAvgVol != value))
				{
					this.OntwentyDayAvgVolChanging(value);
					this.SendPropertyChanging();
					this._twentyDayAvgVol = value;
					this.SendPropertyChanged("twentyDayAvgVol");
					this.OntwentyDayAvgVolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_month", DbType="NChar(20)")]
		public string month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this.OnmonthChanging(value);
					this.SendPropertyChanging();
					this._month = value;
					this.SendPropertyChanged("month");
					this.OnmonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="NChar(10)")]
		public string year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expirationDate", DbType="Date")]
		public System.Nullable<System.DateTime> expirationDate
		{
			get
			{
				return this._expirationDate;
			}
			set
			{
				if ((this._expirationDate != value))
				{
					this.OnexpirationDateChanging(value);
					this.SendPropertyChanging();
					this._expirationDate = value;
					this.SendPropertyChanged("expirationDate");
					this.OnexpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastTradingDay", DbType="NChar(10)")]
		public string lastTradingDay
		{
			get
			{
				return this._lastTradingDay;
			}
			set
			{
				if ((this._lastTradingDay != value))
				{
					this.OnlastTradingDayChanging(value);
					this.SendPropertyChanging();
					this._lastTradingDay = value;
					this.SendPropertyChanged("lastTradingDay");
					this.OnlastTradingDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_twelveMnthPct", DbType="Float")]
		public System.Nullable<double> twelveMnthPct
		{
			get
			{
				return this._twelveMnthPct;
			}
			set
			{
				if ((this._twelveMnthPct != value))
				{
					this.OntwelveMnthPctChanging(value);
					this.SendPropertyChanging();
					this._twelveMnthPct = value;
					this.SendPropertyChanged("twelveMnthPct");
					this.OntwelveMnthPctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_twelveMnthPctDate", DbType="Date")]
		public System.Nullable<System.DateTime> twelveMnthPctDate
		{
			get
			{
				return this._twelveMnthPctDate;
			}
			set
			{
				if ((this._twelveMnthPctDate != value))
				{
					this.OntwelveMnthPctDateChanging(value);
					this.SendPropertyChanging();
					this._twelveMnthPctDate = value;
					this.SendPropertyChanged("twelveMnthPctDate");
					this.OntwelveMnthPctDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preMarketPrice", DbType="Float")]
		public System.Nullable<double> preMarketPrice
		{
			get
			{
				return this._preMarketPrice;
			}
			set
			{
				if ((this._preMarketPrice != value))
				{
					this.OnpreMarketPriceChanging(value);
					this.SendPropertyChanging();
					this._preMarketPrice = value;
					this.SendPropertyChanged("preMarketPrice");
					this.OnpreMarketPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preMarketNetChange", DbType="Float")]
		public System.Nullable<double> preMarketNetChange
		{
			get
			{
				return this._preMarketNetChange;
			}
			set
			{
				if ((this._preMarketNetChange != value))
				{
					this.OnpreMarketNetChangeChanging(value);
					this.SendPropertyChanging();
					this._preMarketNetChange = value;
					this.SendPropertyChanged("preMarketNetChange");
					this.OnpreMarketNetChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preMarketPercentChange", DbType="Float")]
		public System.Nullable<double> preMarketPercentChange
		{
			get
			{
				return this._preMarketPercentChange;
			}
			set
			{
				if ((this._preMarketPercentChange != value))
				{
					this.OnpreMarketPercentChangeChanging(value);
					this.SendPropertyChanging();
					this._preMarketPercentChange = value;
					this.SendPropertyChanged("preMarketPercentChange");
					this.OnpreMarketPercentChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preMarketTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> preMarketTimestamp
		{
			get
			{
				return this._preMarketTimestamp;
			}
			set
			{
				if ((this._preMarketTimestamp != value))
				{
					this.OnpreMarketTimestampChanging(value);
					this.SendPropertyChanging();
					this._preMarketTimestamp = value;
					this.SendPropertyChanged("preMarketTimestamp");
					this.OnpreMarketTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_afterHoursPrice", DbType="Float")]
		public System.Nullable<double> afterHoursPrice
		{
			get
			{
				return this._afterHoursPrice;
			}
			set
			{
				if ((this._afterHoursPrice != value))
				{
					this.OnafterHoursPriceChanging(value);
					this.SendPropertyChanging();
					this._afterHoursPrice = value;
					this.SendPropertyChanged("afterHoursPrice");
					this.OnafterHoursPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_afterHoursNetChange", DbType="Float")]
		public System.Nullable<double> afterHoursNetChange
		{
			get
			{
				return this._afterHoursNetChange;
			}
			set
			{
				if ((this._afterHoursNetChange != value))
				{
					this.OnafterHoursNetChangeChanging(value);
					this.SendPropertyChanging();
					this._afterHoursNetChange = value;
					this.SendPropertyChanged("afterHoursNetChange");
					this.OnafterHoursNetChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_afterHoursPercentChange", DbType="Float")]
		public System.Nullable<double> afterHoursPercentChange
		{
			get
			{
				return this._afterHoursPercentChange;
			}
			set
			{
				if ((this._afterHoursPercentChange != value))
				{
					this.OnafterHoursPercentChangeChanging(value);
					this.SendPropertyChanging();
					this._afterHoursPercentChange = value;
					this.SendPropertyChanged("afterHoursPercentChange");
					this.OnafterHoursPercentChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_afterHoursTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> afterHoursTimestamp
		{
			get
			{
				return this._afterHoursTimestamp;
			}
			set
			{
				if ((this._afterHoursTimestamp != value))
				{
					this.OnafterHoursTimestampChanging(value);
					this.SendPropertyChanging();
					this._afterHoursTimestamp = value;
					this.SendPropertyChanged("afterHoursTimestamp");
					this.OnafterHoursTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_averageWeeklyVolume", DbType="Int")]
		public System.Nullable<int> averageWeeklyVolume
		{
			get
			{
				return this._averageWeeklyVolume;
			}
			set
			{
				if ((this._averageWeeklyVolume != value))
				{
					this.OnaverageWeeklyVolumeChanging(value);
					this.SendPropertyChanging();
					this._averageWeeklyVolume = value;
					this.SendPropertyChanged("averageWeeklyVolume");
					this.OnaverageWeeklyVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_averageMonthlyVolume", DbType="Int")]
		public System.Nullable<int> averageMonthlyVolume
		{
			get
			{
				return this._averageMonthlyVolume;
			}
			set
			{
				if ((this._averageMonthlyVolume != value))
				{
					this.OnaverageMonthlyVolumeChanging(value);
					this.SendPropertyChanging();
					this._averageMonthlyVolume = value;
					this.SendPropertyChanged("averageMonthlyVolume");
					this.OnaverageMonthlyVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_averageQuarterlyVolume", DbType="Int")]
		public System.Nullable<int> averageQuarterlyVolume
		{
			get
			{
				return this._averageQuarterlyVolume;
			}
			set
			{
				if ((this._averageQuarterlyVolume != value))
				{
					this.OnaverageQuarterlyVolumeChanging(value);
					this.SendPropertyChanging();
					this._averageQuarterlyVolume = value;
					this.SendPropertyChanged("averageQuarterlyVolume");
					this.OnaverageQuarterlyVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exchangeMargin", DbType="NChar(20)")]
		public string exchangeMargin
		{
			get
			{
				return this._exchangeMargin;
			}
			set
			{
				if ((this._exchangeMargin != value))
				{
					this.OnexchangeMarginChanging(value);
					this.SendPropertyChanging();
					this._exchangeMargin = value;
					this.SendPropertyChanged("exchangeMargin");
					this.OnexchangeMarginChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
